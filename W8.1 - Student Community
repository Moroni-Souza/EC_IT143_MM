Step 1:
What are the number of Male and Female students?


Step 2:
-- I discovered the number of each group using the count function that was summed after each row was grouped in one
-- through the group by statement. To explain more ad hoc is any simple query that I write and is not part of 
--something fixed but rather is information saved in the SQL cache for the present time, 
-- Besides this the next step should be to validate the data and the results of my query using a 
--command called procedure, this way I can start creating fixed and useful queries which is also called
--stored procedures.
-- Stored procedures allows me to enshorten the coding so that it take not much space 



Step 3:
--Ad Hoc: There is 3,814 Male and 2,793 Female Students
Select Gender,
		Count(Gender) As Total_Students
		From [dbo].[StudentPerformanceFactors]
	Group by Gender


Select * From [dbo].[StudentPerformanceFactors]




Step 4:
Drop View if Exists View_SumStudents;
Go

Create View View_SumStudents
AS

/*****************************************************************************************************************
NAME:  Student_MM
PURPOSE: Showcase the creation of table views

MODIFICATION LOG:
Ver      Date        Author        Description
-----   ----------   -----------   -------------------------------------------------------------------------------
1.0     01/30/2025   MORONI            1. Script for EC_IT143_DA W4.2 Step 4 
					 MIRANDOLLI

RUNTIME: 
1s

NOTES: 
This script was created to help me always remember how to perform the following command in SQL Server as well as to 
present my school work to teachers and the like
 
******************************************************************************************************************/

-- Q1: How do I create a Table View within SQL Server Management using my Ad Hoc queries?
-- A1: I will show how easy it is to create a table view and its purpose is simply to help you show your
--queries workload to anyone else without harming your coding, that's because they will only see the
--information in View mode and any change of the data will be not permanent.

--Table View
	Select Gender,
		Count(Gender) As Total_Students
		From [dbo].[StudentPerformanceFactors]
	Group by Gender


SELECT GETDATE() AS my_date;

-- Once I create a view, all I need to do is run the name of this view and it will getall the results from
--the code I created earlier.
-- The View itself is a table for visualization purposes only.



Step 5.1: 
Select * Into Total_Students From View_SumStudents

Select * From Total_Students



Step 5.2:
USE [StudentPerformance]
GO

/****** Object:  Table [dbo].[Total_Students]    Script Date: 31/01/2025 15:22:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[Total_Students](
	[Gender] varchar(10) DEFAULT 'Not Specified' Not NULL,
	[Total_Students] int NOT NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO

-- Here I can freely change my table settings or add and remove some instances as desired.




Step 6:
USE [EC_IT143_DA]
GO

/****** Object:  View [dbo].[Non_A_Customers]    Script Date: 30/01/2025 22:16:58 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

Create View [dbo].[View_SumStudents]
AS

/*****************************************************************************************************************
NAME:  Student_MM
PURPOSE: Showcase the creation of table views

MODIFICATION LOG:
Ver      Date        Author        Description
-----   ----------   -----------   -------------------------------------------------------------------------------
1.0     01/30/2025   MORONI            1. Script for EC_IT143_DA W4.2 Step 4 
					 MIRANDOLLI

RUNTIME: 
1s

NOTES: 
This script was created to help me always remember how to perform the following command in SQL Server as well as to 
present my school work to teachers and the like
 
******************************************************************************************************************/

-- Q1: How do I create a Table View within SQL Server Management using my Ad Hoc queries?
-- A1: I will show how easy it is to create a table view and its purpose is simply to help you show your queries 
--workload to anyone else without harming your coding, that's because they will only see the information in View mode
--and any change of the data will be not permanent.

--Table View
Select Gender,
	Count(Gender) As Total_Students
	From [dbo].[StudentPerformanceFactors]
		Group by Gender
GO

-- Here above is the script of the view in opened mode


-- Truncate Deletes all records from the table except its columns
Truncate table [dbo].[Total_Students]

Insert into [dbo].[Total_Students]
	Select *
	From [dbo].[View_SumStudents]

-- Now we can see again the data, it's useful to always be aware of the number of columns that will
--be transfered to the new table, so that you can match them according to the number and the column purpose.
Select s.* 
	From [dbo].[Total_Students] as s


Step 7:
Create Procedure Pcd_AllStudents
AS

/*****************************************************************************************************************
NAME:   Student_MM
PURPOSE: My script purpose...

MODIFICATION LOG:
Ver      Date        Author        Description
-----   ----------   -----------   -------------------------------------------------------------------------------
1.0     01/31/2025   MORONI           1. Script created for EC_IT143_DA database about stored procedures.
                     MIRANDOLLI          

RUNTIME: 
1s

NOTES: 
 Script created to show what a stored procedure is and how we can create them, I will also be explaining the
importance of using stored procedures and how they avoid redoing the work over and over again as well as
protecting our codes against online injections.
 
******************************************************************************************************************/

-- Q1: How can I create a Procedure and what does it do?
-- A1: A procedure is a pre-made work that we save for future use, it will rerun as many times as we want the same
--coding so we can work faster and without the need to rewrite all the way down our codings 

--SELECT GETDATE() AS my_date;

	BEGIN

		Truncate Table [dbo].[Total_Students]

		Insert Into [dbo].[Total_Students]
			 Select *
			   From [dbo].[View_SumStudents]

			 Select c.* 
			   From [dbo].[Total_Students] as c

	END;
GO


Step 8:
EXEC  Pcd_AllStudents
